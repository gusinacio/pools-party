datasource db {
  url      = env("DATABASE_URL")
  provider = "postgresql"
}

generator client {
  provider = "prisma-client-js"
}

// model Wallet {
//   id           Int           @id @default(autoincrement())
//   transactions Transaction[]
// }

// model Transaction {
//   id        Int      @id @default(autoincrement())
//   timestamp DateTime @default(now())
//   amount    Int
//   wallet    Wallet   @relation(fields: [walletId], references: [id])
//   walletId  Int
//   type      TxType
// }

model User {
  id           Int        @id @default(autoincrement())
  username     String     @unique
  email        String     @unique
  passwordHash String
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @default(now())
  questions    Question[]
  answers      Answer[]
}

model Question {
  id           Int           @id @default(autoincrement())
  title        String
  createdAt    DateTime      @default(now())
  expiresAt    DateTime
  creator      User          @relation(fields: [creatorId], references: [id])
  creatorId    Int
  alternatives Alternative[]
  Answer       Answer[]
}

model Alternative {
  Question      Question? @relation(fields: [questionId], references: [id])
  questionId    Int
  alternativeId Int
  text          String
  Answer        Answer[]

  @@id([questionId, alternativeId])
}

model Answer {
  when          DateTime    @default(now())
  alternative   Alternative @relation(fields: [questionId, alternativeId], references: [questionId, alternativeId])
  alternativeId Int
  question      Question    @relation(fields: [questionId], references: [id])
  questionId    Int
  user          User        @relation(fields: [userId], references: [id])
  userId        Int

  @@id([userId, questionId])
}

enum TxType {
  QUESTION
  ANSWER
  CLAIM
}
